language: cpp
dist: trusty
matrix:
  include:
  - os: linux
    env:
      - PYTHON=3.6
      - COMPILER_NAME=gcc
      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    addons:
      apt:
        packages:
          - g++-7
          - liblapack-dev
          - libblas-dev
          - liblapacke-dev
          - libatlas-base-dev
          - libtcmalloc-minimal4
          - cmake
          - python3
          - python3-pip
        sources: &sources
          - llvm-toolchain-precise-3.8
          - ubuntu-toolchain-r-test
  - os: linux
    env:
      - CONDA=3.6
      - COMPILER_NAME=gcc
      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    addons:
      apt:
        packages:
          - g++-7
          - liblapack-dev
          - libblas-dev
          - liblapacke-dev
          - libatlas-base-dev
          - libtcmalloc-minimal4
          - cmake
          - python3
          - python3-pip
        sources: &sources
          - llvm-toolchain-precise-3.8
          - ubuntu-toolchain-r-test
  - os: osx
    env:
      - PYTHON=3.6
    compiler: clang
  - os: osx
    env:
      - CONDA=3.6
    compiler: clang
before_install:
- eval "${MATRIX_EVAL}"
- if [ "$TRAVIS_OS_NAME" = "linux" ]; then OS=Linux-x86_64; else OS=MacOSX-x86_64; fi
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then brew update; brew uninstall openblas; rm /usr/local/include/c++; brew install openblas; fi
- wget -O miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-$OS.sh
- bash miniconda.sh -b -p $HOME/miniconda
- export PATH="$HOME/miniconda/bin:$PATH"
- export LD_PRELOAD="/usr/lib/libtcmalloc_minimal.so.4"
- conda config --set always_yes yes --set changeps1 no
- conda config --add channels conda-forge
- conda update -q conda
- conda install -q conda-build
- conda create -q -n test-environment python=3.6 cmake pytorch torchvision numpy scipy mkl docopt -c soumith
- source activate test-environment
############################################################################
# Install a recent CMake
############################################################################
- |
  if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
    CMAKE_URL="https://cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.tar.gz"
    mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
    export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    source local_build_env.sh
  else
    brew update
    brew upgrade cmake || brew install cmake
    brew upgrade python
  fi
- python --version
- pip3 --version
- cmake --version
- echo $CC
- echo $CXX
install:
- if [ -n "$PYTHON" ]; then sudo pip3 install --upgrade pip; fi
- if [ -n "$PYTHON" ]; then sudo pip3 install scikit-build; fi
- if [ -n "$PYTHON" ]; then sudo pip3 install --upgrade pip-tools; fi
- if [ -n "$PYTHON" ]; then sudo pip3 install --upgrade cmake; fi
- if [ -n "$PYTHON" ]; then sudo pip3 install .; fi
- if [ -n "$PYTHON" ]; then source local_build_env.sh; fi
- if [ -n "$CONDA" ]; then conda build conda.recipe; fi
- if [ -n "$CONDA" ]; then conda install --use-local hazy; fi
script:
- cd eval/intrinsic; bash download_data.sh; cd ../..;
- python --version
- python setup.py test

branches:
  only:
    - master

notifications:
  email:
  - craberger@gmail.com
  - senwu@stanford.edu
  - mleszczy@stanford.edu
